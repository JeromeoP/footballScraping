{"ast":null,"code":"var _jsxFileName = \"/Applications/Gamla skrivbord/Progg/FootballStatsScraping/footballscraping/src/PlayerSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Input, Box, Text, Spinner } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PlayerSearch() {\n  _s();\n  const [playerId, setPlayerId] = useState('');\n  const [playerData, setPlayerData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const searchPlayer = async () => {\n    setLoading(true);\n    const res = await fetch(`http://localhost:3001/scrape/${encodeURIComponent(playerId)}`);\n    const data = await res.json();\n    setPlayerData(data[0]); // Only take the first player in the response\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      value: playerId,\n      onChange: e => setPlayerId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: searchPlayer,\n      isLoading: loading,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      size: \"xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : playerData && /*#__PURE__*/_jsxDEV(Box, {\n      borderWidth: 1,\n      borderRadius: \"lg\",\n      overflow: \"hidden\",\n      padding: 4,\n      marginTop: 4,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xl\",\n        marginBottom: 2,\n        children: [\"Player: \", playerData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Games Played: \", playerData.games]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Goals Scored: \", playerData.goals]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Clean Sheets: \", playerData.clean_sheets]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        marginTop: 2,\n        children: [\"More Info: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: playerData.href,\n          children: \"Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(PlayerSearch, \"Se3m7L1EIYRr4f2IB2FmYMaJcMg=\");\n_c = PlayerSearch;\nexport default PlayerSearch;\nvar _c;\n$RefreshReg$(_c, \"PlayerSearch\");","map":{"version":3,"names":["React","useState","Button","Input","Box","Text","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerSearch","_s","playerId","setPlayerId","playerData","setPlayerData","loading","setLoading","searchPlayer","res","fetch","encodeURIComponent","data","json","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isLoading","size","borderWidth","borderRadius","overflow","padding","marginTop","fontSize","marginBottom","name","games","goals","clean_sheets","href","_c","$RefreshReg$"],"sources":["/Applications/Gamla skrivbord/Progg/FootballStatsScraping/footballscraping/src/PlayerSearch.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Input, Box, Text, Spinner } from \"@chakra-ui/react\";\n\nfunction PlayerSearch() {\n  const [playerId, setPlayerId] = useState('');\n  const [playerData, setPlayerData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const searchPlayer = async () => {\n    setLoading(true);\n    const res = await fetch(`http://localhost:3001/scrape/${encodeURIComponent(playerId)}`);\n    const data = await res.json();\n    setPlayerData(data[0]);  // Only take the first player in the response\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <Input value={playerId} onChange={e => setPlayerId(e.target.value)} />\n      <Button onClick={searchPlayer} isLoading={loading}>Search</Button>\n      {loading ? (\n        <Spinner size=\"xl\" />\n      ) : playerData && (\n        <Box borderWidth={1} borderRadius=\"lg\" overflow=\"hidden\" padding={4} marginTop={4}>\n          <Text fontSize=\"xl\" marginBottom={2}>Player: {playerData.name}</Text>\n          <Text>Games Played: {playerData.games}</Text>\n          <Text>Goals Scored: {playerData.goals}</Text>\n          <Text>Clean Sheets: {playerData.clean_sheets}</Text>\n          <Text marginTop={2}>More Info: <a href={playerData.href}>Link</a></Text>\n        </Box>\n      )}\n    </>\n  );\n}\n\nexport default PlayerSearch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}