{"ast":null,"code":"var _jsxFileName = \"/Applications/Gamla skrivbord/Progg/FootballStatsScraping/footballscraping/src/PlayerSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Input, Box, Text, Spinner, VStack, HStack } from \"@chakra-ui/react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerSearch() {\n  _s();\n  const [playerId1, setPlayerId1] = useState('');\n  const [playerId2, setPlayerId2] = useState('');\n  const [playerData1, setPlayerData1] = useState(null);\n  const [playerData2, setPlayerData2] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const searchPlayers = async () => {\n    setLoading(true);\n    const res1 = await fetch(`http://localhost:3001/scrape/${encodeURIComponent(playerId1)}`);\n    const data1 = await res1.json();\n    setPlayerData1(data1[0]); // Only take the first player in the response\n\n    const res2 = await fetch(`http://localhost:3001/scrape/${encodeURIComponent(playerId2)}`);\n    const data2 = await res2.json();\n    setPlayerData2(data2[0]); // Only take the first player in the response\n\n    setLoading(false);\n  };\n  const [chartData, setChartData] = useState(null);\n  const PlayerInfo = _ref => {\n    let {\n      playerData\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      borderWidth: 1,\n      borderRadius: \"lg\",\n      overflow: \"hidden\",\n      padding: 4,\n      marginTop: 4,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xl\",\n        marginBottom: 2,\n        children: [\"Player: \", playerData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Games Played: \", playerData.games]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Goals Scored: \", playerData.goals]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Clean Sheets: \", playerData.clean_sheets]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        marginTop: 2,\n        children: [\"More Info: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: playerData.href,\n          children: \"Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this);\n  };\n  chartData = [{\n    name: 'Goals',\n    [playerData1.name]: playerData1.goals,\n    [playerData2.name]: playerData2.goals\n  }];\n  setChartData(chartData);\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: 4,\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: playerId1,\n        onChange: e => setPlayerId1(e.target.value),\n        placeholder: \"Player 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: playerId2,\n        onChange: e => setPlayerId2(e.target.value),\n        placeholder: \"Player 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: searchPlayers,\n      isLoading: loading,\n      children: \"Compare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      size: \"xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      children: [playerData1 && /*#__PURE__*/_jsxDEV(PlayerInfo, {\n        playerData: playerData1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }, this), playerData2 && /*#__PURE__*/_jsxDEV(PlayerInfo, {\n        playerData: playerData2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 27\n      }, this), chartData && /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 500,\n        height: 300,\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: playerData1.name,\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: playerData2.name,\n          fill: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerSearch, \"MxKCN/ygO7Au2UnZJrASaFRwvug=\");\n_c = PlayerSearch;\nexport default PlayerSearch;\nvar _c;\n$RefreshReg$(_c, \"PlayerSearch\");","map":{"version":3,"names":["React","useState","Button","Input","Box","Text","Spinner","VStack","HStack","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","PlayerSearch","_s","playerId1","setPlayerId1","playerId2","setPlayerId2","playerData1","setPlayerData1","playerData2","setPlayerData2","loading","setLoading","searchPlayers","res1","fetch","encodeURIComponent","data1","json","res2","data2","chartData","setChartData","PlayerInfo","_ref","playerData","borderWidth","borderRadius","overflow","padding","marginTop","children","fontSize","marginBottom","name","fileName","_jsxFileName","lineNumber","columnNumber","games","goals","clean_sheets","href","spacing","value","onChange","e","target","placeholder","onClick","isLoading","size","width","height","data","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["/Applications/Gamla skrivbord/Progg/FootballStatsScraping/footballscraping/src/PlayerSearch.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Input, Box, Text, Spinner, VStack, HStack } from \"@chakra-ui/react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nfunction PlayerSearch() {\n  const [playerId1, setPlayerId1] = useState('');\n  const [playerId2, setPlayerId2] = useState('');\n  const [playerData1, setPlayerData1] = useState(null);\n  const [playerData2, setPlayerData2] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const searchPlayers = async () => {\n    setLoading(true);\n    const res1 = await fetch(`http://localhost:3001/scrape/${encodeURIComponent(playerId1)}`);\n    const data1 = await res1.json();\n    setPlayerData1(data1[0]);  // Only take the first player in the response\n\n    const res2 = await fetch(`http://localhost:3001/scrape/${encodeURIComponent(playerId2)}`);\n    const data2 = await res2.json();\n    setPlayerData2(data2[0]);  // Only take the first player in the response\n\n    setLoading(false);\n  };\n  const [chartData, setChartData] = useState(null);\n\n  \n\n  const PlayerInfo = ({playerData}) => (\n    <Box borderWidth={1} borderRadius=\"lg\" overflow=\"hidden\" padding={4} marginTop={4}>\n      <Text fontSize=\"xl\" marginBottom={2}>Player: {playerData.name}</Text>\n      <Text>Games Played: {playerData.games}</Text>\n      <Text>Goals Scored: {playerData.goals}</Text>\n      <Text>Clean Sheets: {playerData.clean_sheets}</Text>\n      <Text marginTop={2}>More Info: <a href={playerData.href}>Link</a></Text>\n    </Box>\n  );\n\n   chartData = [\n    {\n      name: 'Goals',\n      [playerData1.name]: playerData1.goals,\n      [playerData2.name]: playerData2.goals,\n    },\n   \n  ];\n  setChartData(chartData);\n  \n  return (\n    <VStack spacing={4}>\n      <HStack spacing={4}>\n        <Input value={playerId1} onChange={e => setPlayerId1(e.target.value)} placeholder=\"Player 1\" />\n        <Input value={playerId2} onChange={e => setPlayerId2(e.target.value)} placeholder=\"Player 2\" />\n      </HStack>\n      <Button onClick={searchPlayers} isLoading={loading}>Compare</Button>\n      {loading ? (\n        <Spinner size=\"xl\" />\n      ) : (\n        <HStack spacing={4}>\n          {playerData1 && <PlayerInfo playerData={playerData1} />}\n          {playerData2 && <PlayerInfo playerData={playerData2} />}\n          {chartData && (\n  <BarChart width={500} height={300} data={chartData}>\n    <CartesianGrid strokeDasharray=\"3 3\" />\n    <XAxis dataKey=\"name\" />\n    <YAxis />\n    <Tooltip />\n    <Legend />\n    <Bar dataKey={playerData1.name} fill=\"#8884d8\" />\n    <Bar dataKey={playerData2.name} fill=\"#82ca9d\" />\n  </BarChart>\n)}\n\n        </HStack>\n      )}\n    </VStack>\n  );\n}\n\nexport default PlayerSearch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}